name: Urbs Gateway Release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*-urbs' # Push events to matching v*-urbs, i.e. v1.0-urbs

jobs:
  build:
    name: Build And Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.1
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -d ./...

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          make binary
          zip -j ./dist/traefik.linux-amd64.zip ./dist/traefik

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/traefik.linux-amd64.zip
          asset_name: traefik.linux-amd64.zip
          asset_content_type: application/zip
